// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.1 Build 720 11/11/2020 Patches 1.02i SJ Lite Edition"

// DATE "09/04/2021 23:51:55"

// 
// Device: Altera EP4CE6E22C8 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module VGA_CONTROLLER (
	\1 ,
	\2 ,
	\3 ,
	\4 ,
	\5 ,
	\6 ,
	\7 ,
	\8 ,
	\9 ,
	\10 ,
	\11 ,
	\12 ,
	\13 ,
	\14 ,
	\15 ,
	\16 ,
	\17 ,
	\18 ,
	\19 ,
	\20 ,
	\21 ,
	\22 ,
	\23 ,
	\24 ,
	\25 ,
	\26 ,
	\27 ,
	\28 ,
	\29 ,
	\30 ,
	\31 ,
	IN1,
	IN2,
	IN3,
	IN4,
	IN5,
	IN6,
	IN7,
	IN8);
output 	\1 ;
output 	\2 ;
output 	\3 ;
output 	\4 ;
output 	\5 ;
output 	\6 ;
output 	\7 ;
output 	\8 ;
output 	\9 ;
output 	\10 ;
output 	\11 ;
output 	\12 ;
output 	\13 ;
output 	\14 ;
output 	\15 ;
output 	\16 ;
output 	\17 ;
output 	\18 ;
output 	\19 ;
output 	\20 ;
output 	\21 ;
output 	\22 ;
output 	\23 ;
output 	\24 ;
output 	\25 ;
output 	\26 ;
output 	\27 ;
output 	\28 ;
output 	\29 ;
output 	\30 ;
output 	\31 ;
input 	IN1;
input 	IN2;
input 	IN3;
input 	IN4;
input 	IN5;
input 	IN6;
input 	IN7;
input 	IN8;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \IN1~input_o ;
wire \IN2~input_o ;
wire \IN3~input_o ;
wire \IN4~input_o ;
wire \IN5~input_o ;
wire \IN6~input_o ;
wire \IN7~input_o ;
wire \IN8~input_o ;
wire \1~output_o ;
wire \2~output_o ;
wire \3~output_o ;
wire \4~output_o ;
wire \5~output_o ;
wire \6~output_o ;
wire \7~output_o ;
wire \8~output_o ;
wire \9~output_o ;
wire \10~output_o ;
wire \11~output_o ;
wire \12~output_o ;
wire \13~output_o ;
wire \14~output_o ;
wire \15~output_o ;
wire \16~output_o ;
wire \17~output_o ;
wire \18~output_o ;
wire \19~output_o ;
wire \20~output_o ;
wire \21~output_o ;
wire \22~output_o ;
wire \23~output_o ;
wire \24~output_o ;
wire \25~output_o ;
wire \26~output_o ;
wire \27~output_o ;
wire \28~output_o ;
wire \29~output_o ;
wire \30~output_o ;
wire \31~output_o ;


cycloneive_io_obuf \1~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\1~output_o ),
	.obar());
// synopsys translate_off
defparam \1~output .bus_hold = "false";
defparam \1~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \2~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\2~output_o ),
	.obar());
// synopsys translate_off
defparam \2~output .bus_hold = "false";
defparam \2~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \3~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\3~output_o ),
	.obar());
// synopsys translate_off
defparam \3~output .bus_hold = "false";
defparam \3~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \4~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\4~output_o ),
	.obar());
// synopsys translate_off
defparam \4~output .bus_hold = "false";
defparam \4~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \5~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\5~output_o ),
	.obar());
// synopsys translate_off
defparam \5~output .bus_hold = "false";
defparam \5~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \6~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\6~output_o ),
	.obar());
// synopsys translate_off
defparam \6~output .bus_hold = "false";
defparam \6~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \7~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\7~output_o ),
	.obar());
// synopsys translate_off
defparam \7~output .bus_hold = "false";
defparam \7~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \8~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\8~output_o ),
	.obar());
// synopsys translate_off
defparam \8~output .bus_hold = "false";
defparam \8~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \9~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\9~output_o ),
	.obar());
// synopsys translate_off
defparam \9~output .bus_hold = "false";
defparam \9~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \10~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\10~output_o ),
	.obar());
// synopsys translate_off
defparam \10~output .bus_hold = "false";
defparam \10~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \11~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\11~output_o ),
	.obar());
// synopsys translate_off
defparam \11~output .bus_hold = "false";
defparam \11~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \12~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\12~output_o ),
	.obar());
// synopsys translate_off
defparam \12~output .bus_hold = "false";
defparam \12~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \13~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\13~output_o ),
	.obar());
// synopsys translate_off
defparam \13~output .bus_hold = "false";
defparam \13~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \14~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\14~output_o ),
	.obar());
// synopsys translate_off
defparam \14~output .bus_hold = "false";
defparam \14~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \15~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\15~output_o ),
	.obar());
// synopsys translate_off
defparam \15~output .bus_hold = "false";
defparam \15~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \16~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\16~output_o ),
	.obar());
// synopsys translate_off
defparam \16~output .bus_hold = "false";
defparam \16~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \17~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\17~output_o ),
	.obar());
// synopsys translate_off
defparam \17~output .bus_hold = "false";
defparam \17~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \18~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\18~output_o ),
	.obar());
// synopsys translate_off
defparam \18~output .bus_hold = "false";
defparam \18~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \19~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\19~output_o ),
	.obar());
// synopsys translate_off
defparam \19~output .bus_hold = "false";
defparam \19~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \20~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\20~output_o ),
	.obar());
// synopsys translate_off
defparam \20~output .bus_hold = "false";
defparam \20~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \21~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\21~output_o ),
	.obar());
// synopsys translate_off
defparam \21~output .bus_hold = "false";
defparam \21~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \22~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\22~output_o ),
	.obar());
// synopsys translate_off
defparam \22~output .bus_hold = "false";
defparam \22~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \23~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\23~output_o ),
	.obar());
// synopsys translate_off
defparam \23~output .bus_hold = "false";
defparam \23~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \24~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\24~output_o ),
	.obar());
// synopsys translate_off
defparam \24~output .bus_hold = "false";
defparam \24~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \25~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\25~output_o ),
	.obar());
// synopsys translate_off
defparam \25~output .bus_hold = "false";
defparam \25~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \26~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\26~output_o ),
	.obar());
// synopsys translate_off
defparam \26~output .bus_hold = "false";
defparam \26~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \27~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\27~output_o ),
	.obar());
// synopsys translate_off
defparam \27~output .bus_hold = "false";
defparam \27~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \28~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\28~output_o ),
	.obar());
// synopsys translate_off
defparam \28~output .bus_hold = "false";
defparam \28~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \29~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\29~output_o ),
	.obar());
// synopsys translate_off
defparam \29~output .bus_hold = "false";
defparam \29~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \30~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\30~output_o ),
	.obar());
// synopsys translate_off
defparam \30~output .bus_hold = "false";
defparam \30~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \31~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\31~output_o ),
	.obar());
// synopsys translate_off
defparam \31~output .bus_hold = "false";
defparam \31~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \IN1~input (
	.i(IN1),
	.ibar(gnd),
	.o(\IN1~input_o ));
// synopsys translate_off
defparam \IN1~input .bus_hold = "false";
defparam \IN1~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \IN2~input (
	.i(IN2),
	.ibar(gnd),
	.o(\IN2~input_o ));
// synopsys translate_off
defparam \IN2~input .bus_hold = "false";
defparam \IN2~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \IN3~input (
	.i(IN3),
	.ibar(gnd),
	.o(\IN3~input_o ));
// synopsys translate_off
defparam \IN3~input .bus_hold = "false";
defparam \IN3~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \IN4~input (
	.i(IN4),
	.ibar(gnd),
	.o(\IN4~input_o ));
// synopsys translate_off
defparam \IN4~input .bus_hold = "false";
defparam \IN4~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \IN5~input (
	.i(IN5),
	.ibar(gnd),
	.o(\IN5~input_o ));
// synopsys translate_off
defparam \IN5~input .bus_hold = "false";
defparam \IN5~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \IN6~input (
	.i(IN6),
	.ibar(gnd),
	.o(\IN6~input_o ));
// synopsys translate_off
defparam \IN6~input .bus_hold = "false";
defparam \IN6~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \IN7~input (
	.i(IN7),
	.ibar(gnd),
	.o(\IN7~input_o ));
// synopsys translate_off
defparam \IN7~input .bus_hold = "false";
defparam \IN7~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \IN8~input (
	.i(IN8),
	.ibar(gnd),
	.o(\IN8~input_o ));
// synopsys translate_off
defparam \IN8~input .bus_hold = "false";
defparam \IN8~input .simulate_z_as = "z";
// synopsys translate_on

assign \1  = \1~output_o ;

assign \2  = \2~output_o ;

assign \3  = \3~output_o ;

assign \4  = \4~output_o ;

assign \5  = \5~output_o ;

assign \6  = \6~output_o ;

assign \7  = \7~output_o ;

assign \8  = \8~output_o ;

assign \9  = \9~output_o ;

assign \10  = \10~output_o ;

assign \11  = \11~output_o ;

assign \12  = \12~output_o ;

assign \13  = \13~output_o ;

assign \14  = \14~output_o ;

assign \15  = \15~output_o ;

assign \16  = \16~output_o ;

assign \17  = \17~output_o ;

assign \18  = \18~output_o ;

assign \19  = \19~output_o ;

assign \20  = \20~output_o ;

assign \21  = \21~output_o ;

assign \22  = \22~output_o ;

assign \23  = \23~output_o ;

assign \24  = \24~output_o ;

assign \25  = \25~output_o ;

assign \26  = \26~output_o ;

assign \27  = \27~output_o ;

assign \28  = \28~output_o ;

assign \29  = \29~output_o ;

assign \30  = \30~output_o ;

assign \31  = \31~output_o ;

endmodule
